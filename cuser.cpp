#include "cuser.h"

//====================================================================================================
//конструктор класса
//====================================================================================================
CUser::CUser(void)
{
 Name="";
 JobTitle="";
 Login="";
 Password="";
 Description="";
 Telephone="";
 UserGUID="";
 Leader=false;
 ChangeData=false;
}
//====================================================================================================
//деструктор класса
//====================================================================================================
CUser::~CUser()
{		
}
//====================================================================================================
//функции класса
//====================================================================================================
//----------------------------------------------------------------------------------------------------
//получить имя
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetName(void) const
{
 return(Name);
}
//----------------------------------------------------------------------------------------------------
//получить логин
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetLogin(void) const
{
 return(Login);
}
//----------------------------------------------------------------------------------------------------
//получить пароль
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetPassword(void) const
{
 return(Password);
}
//----------------------------------------------------------------------------------------------------
//получить должность
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetJobTitle(void) const
{
 return(JobTitle);
}
//----------------------------------------------------------------------------------------------------
//получить описание
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetDescription(void) const
{
 return(Description);
}
//----------------------------------------------------------------------------------------------------
//получить телефон
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetTelephone(void) const
{
 return(Telephone);
}
//----------------------------------------------------------------------------------------------------
//получить уникальный идентификатор пользователя
//----------------------------------------------------------------------------------------------------
const CSafeString& CUser::GetUserGUID(void) const
{
 return(UserGUID);
}
//----------------------------------------------------------------------------------------------------
//получить, является ли руководителем
//----------------------------------------------------------------------------------------------------
const bool& CUser::GetLeader(void) const
{
 return(Leader);
}
//----------------------------------------------------------------------------------------------------
//получить, изменились ли данные сотрудника
//----------------------------------------------------------------------------------------------------
const bool& CUser::GetChangeData(void) const
{
 return(ChangeData);
}

//----------------------------------------------------------------------------------------------------
//задать имя
//----------------------------------------------------------------------------------------------------
void CUser::SetName(const char *name)
{
 Name=name;
}
//----------------------------------------------------------------------------------------------------
//задать логин
//----------------------------------------------------------------------------------------------------
void CUser::SetLogin(const char *login)
{
 Login=login;
}
//----------------------------------------------------------------------------------------------------
//задать пароль
//----------------------------------------------------------------------------------------------------
void CUser::SetPassword(const char *password)
{
 Password=password;
}
//----------------------------------------------------------------------------------------------------
//задать должность
//----------------------------------------------------------------------------------------------------
void CUser::SetJobTitle(const char *job_title)
{
 JobTitle=job_title;
}
//----------------------------------------------------------------------------------------------------
//задать описание
//----------------------------------------------------------------------------------------------------
void CUser::SetDescription(const char *description)
{
 Description=description;
}
//----------------------------------------------------------------------------------------------------
//задать телефон
//----------------------------------------------------------------------------------------------------
void CUser::SetTelephone(const char *telephone)
{
 Telephone=telephone;
}
//----------------------------------------------------------------------------------------------------
//задать уникальный идентификатор пользователя
//----------------------------------------------------------------------------------------------------
void CUser::SetUserGUID(const char *user_guid)
{
 UserGUID=user_guid;
}
//----------------------------------------------------------------------------------------------------
//задать, является ли руководителем
//----------------------------------------------------------------------------------------------------
void CUser::SetLeader(bool leader)
{
 Leader=leader;
}
//----------------------------------------------------------------------------------------------------
//задать, изменились ли данные сотрудника
//----------------------------------------------------------------------------------------------------
void CUser::SetChangeData(bool change_data)
{
 ChangeData=change_data;
}

//----------------------------------------------------------------------------------------------------
//верный ли логин и пароль
//----------------------------------------------------------------------------------------------------
bool CUser::IsLoginAndPassword(const char *login,const char *password) const
{
 if (Login.Compare(CSafeString(const_cast<char*>(login)))==0 && Password.Compare(CSafeString(const_cast<char*>(password)))==0) return(true);
 return(false);
}
//----------------------------------------------------------------------------------------------------
//верный ли UserGUID
//----------------------------------------------------------------------------------------------------
bool CUser::IsUserGUID(const char *guid) const
{
 if (UserGUID.Compare(const_cast<char*>(guid))==0) return(true);    
 return(false);
}

//----------------------------------------------------------------------------------------------------
//сохранить данные
//----------------------------------------------------------------------------------------------------
bool CUser::Save(FILE *file) const
{
 //заполняем заголовок
 SHeader sHeader;
 sHeader.NameSize=Name.GetLength();
 sHeader.JobTitleSize=JobTitle.GetLength();
 sHeader.TelephoneSize=Telephone.GetLength();
 sHeader.DescriptionSize=Description.GetLength();
 sHeader.UserGUIDSize=UserGUID.GetLength();
 sHeader.Leader=Leader;
 fwrite(reinterpret_cast<const char*>(&sHeader),sizeof(SHeader),1,file);
 const char *s_ptr;
 s_ptr=Name;
 fwrite(s_ptr,Name.GetLength(),1,file);
 s_ptr=JobTitle;
 fwrite(s_ptr,JobTitle.GetLength(),1,file);
 s_ptr=Telephone;
 fwrite(s_ptr,Telephone.GetLength(),1,file);
 s_ptr=Description;
 fwrite(s_ptr,Description.GetLength(),1,file);
 s_ptr=UserGUID;
 fwrite(s_ptr,UserGUID.GetLength(),1,file);
 return(true);
}
//----------------------------------------------------------------------------------------------------
//загрузить данные
//----------------------------------------------------------------------------------------------------
bool CUser::Load(FILE *file)
{
 SHeader sHeader;
 fread(&sHeader,sizeof(SHeader),1,file);
 char *name=new char[sHeader.NameSize+1];
 char *job_title=new char[sHeader.JobTitleSize+1];
 char *telephone=new char[sHeader.TelephoneSize+1];
 char *description=new char[sHeader.DescriptionSize+1];
 char *user_guid=new char[sHeader.UserGUIDSize+1];
 
 fread(name,sizeof(char),sHeader.NameSize,file);
 fread(job_title,sizeof(char),sHeader.JobTitleSize,file);
 fread(telephone,sizeof(char),sHeader.TelephoneSize,file);
 fread(description,sizeof(char),sHeader.DescriptionSize,file);
 fread(user_guid,sizeof(char),sHeader.UserGUIDSize,file);  
 
 name[sHeader.NameSize]=0;
 job_title[sHeader.JobTitleSize]=0;
 telephone[sHeader.TelephoneSize]=0;
 description[sHeader.DescriptionSize]=0;
 user_guid[sHeader.UserGUIDSize]=0;

 Name=name;
 JobTitle=job_title;
 Telephone=telephone;
 Description=description;
 UserGUID=user_guid;
 Leader=sHeader.Leader;

 delete[](name);
 delete[](job_title);
 delete[](telephone);
 delete[](description);
 delete[](user_guid);

 return(true);
}
