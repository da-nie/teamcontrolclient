#ifndef CUNIQUE_ARRAY_PTR
#define CUNIQUE_ARRAY_PTR

//====================================================================================================
//описание
//====================================================================================================

//Класс умного указателя для массивов

//====================================================================================================
//подключаемые библиотеки
//====================================================================================================


//====================================================================================================
//класс умного указателя
//====================================================================================================
template<class C>
class CUniqueArrayPtr
{
 private:
  C *c_Ptr;//указатель на класс 	
 public:
  CUniqueArrayPtr()//конструктор
  {
   c_Ptr=NULL;  	
  }
 ~CUniqueArrayPtr()//деструктор
  {
   if (c_Ptr!=NULL) delete[](c_Ptr); 	
   c_Ptr=NULL;
  }
 public: 
  C* Get(void)//получить указатель на объект
  {
   return(c_Ptr);
  }
 void Set(C *c_Ptr_Set)//задать указатель на объект
  {
   c_Ptr=c_Ptr_Set;
  }
 //запрещаем операции копирования и присваивания 
 private:
  CUniqueArrayPtr(const CUniqueArrayPtr<C> &cUniqueArrayPtr){};//конструктор копирования запрещён
  CUniqueArrayPtr<C>& operator=(const CUniqueArrayPtr<C>& cUniqueArrayPtr){return(*this);}//оператор "="
};

#endif